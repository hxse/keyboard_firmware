{
  "version": 1,
  "notes": "",
  "documentation": "\"This file is a QMK Configurator export. You can import this at <https://config.qmk.fm>. It can also be used directly with QMK's source code.\n\nTo setup your QMK environment check out the tutorial: <https://docs.qmk.fm/#/newbs>\n\nYou can convert this file to a keymap.c using this command: `qmk json2c {keymap}`\n\nYou can compile this keymap using this command: `qmk compile {keymap}`\"\n",
  "keyboard": "ymdk/ymd40/air40",
  "keymap": "ymdk_ymd40_air40_layout_ortho_4x12_2x2u_mine",
  "layout": "LAYOUT_ortho_4x12_2x2u",
  "layers": [
    [
      "KC_TAB",
      "KC_Q",
      "KC_W",
      "KC_E",
      "KC_R",
      "KC_T",
      "KC_Y",
      "KC_U",
      "KC_I",
      "KC_O",
      "KC_P",
      "KC_ESC",
      "KC_BSPC",
      "KC_A",
      "KC_S",
      "KC_D",
      "KC_F",
      "KC_G",
      "KC_H",
      "KC_J",
      "KC_K",
      "KC_L",
      "KC_COLN",
      "KC_QUOT",
      "KC_LSFT",
      "KC_Z",
      "KC_X",
      "KC_C",
      "KC_V",
      "KC_B",
      "KC_N",
      "KC_M",
      "KC_COMM",
      "KC_DOT",
      "KC_EQL",
      "KC_UNDS",
      "TO(1)",
      "KC_0",
      "KC_LALT",
      "KC_LCTL",
      "KC_SPC",
      "KC_ENT",
      "KC_LSFT",
      "KC_LGUI",
      "QK_BOOT",
      "TG(1)"
    ],
    [
      "KC_TAB",
      "KC_Q",
      "KC_W",
      "KC_E",
      "KC_R",
      "KC_T",
      "KC_Y",
      "KC_U",
      "KC_I",
      "KC_O",
      "KC_P",
      "KC_ESC",
      "KC_BSPC",
      "KC_A",
      "KC_S",
      "KC_D",
      "KC_F",
      "KC_G",
      "KC_H",
      "KC_J",
      "KC_K",
      "KC_L",
      "KC_COLN",
      "KC_QUOT",
      "LCTL(KC_Z)",
      "KC_Z",
      "KC_X",
      "KC_C",
      "KC_V",
      "KC_B",
      "KC_N",
      "KC_M",
      "KC_COMM",
      "KC_DOT",
      "KC_EQL",
      "KC_UNDS",
      "OSL(4)",
      "KC_1",
      "KC_LALT",
      "KC_LCTL",
      "LT(2,KC_SPC)",
      "LT(3,KC_ENT)",
      "KC_LSFT",
      "KC_LGUI",
      "KC_TRNS",
      "KC_TRNS"
    ],
    [
      "LALT(KC_TAB)",
      "ANY(LALT(LSFT(KC_F1)))",
      "LCTL(KC_LEFT)",
      "KC_UP",
      "LCTL(KC_RGHT)",
      "KC_PGUP",
      "KC_WH_U",
      "KC_LCBR",
      "KC_LBRC",
      "KC_LPRN",
      "KC_LT",
      "KC_ESC",
      "KC_DEL",
      "LCTL(KC_LBRC)",
      "KC_LEFT",
      "KC_DOWN",
      "KC_RGHT",
      "LCTL(KC_RBRC)",
      "KC_MUTE",
      "KC_BTN1",
      "KC_BTN3",
      "KC_BTN2",
      "KC_SCLN",
      "KC_GRV",
      "ANY(LCTL(LSFT(KC_Z)))",
      "ANY(LALT(LSFT(KC_F2)))",
      "KC_HOME",
      "KC_INS",
      "KC_END",
      "KC_PGDN",
      "KC_WH_D",
      "KC_EXLM",
      "KC_VOLD",
      "KC_VOLU",
      "KC_QUES",
      "KC_UNDS",
      "KC_NO",
      "KC_2",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "LSFT(KC_ENT)",
      "KC_NO",
      "KC_NO",
      "KC_TRNS",
      "KC_TRNS"
    ],
    [
      "LCTL(KC_TAB)",
      "KC_PLUS",
      "KC_MINS",
      "KC_ASTR",
      "KC_PERC",
      "KC_AMPR",
      "KC_PIPE",
      "KC_RCBR",
      "KC_RBRC",
      "KC_RPRN",
      "KC_GT",
      "KC_ESC",
      "KC_BSPC",
      "KC_1",
      "KC_2",
      "KC_3",
      "KC_4",
      "KC_5",
      "KC_6",
      "KC_7",
      "KC_8",
      "KC_9",
      "KC_0",
      "KC_DQUO",
      "LCTL(KC_Z)",
      "KC_AT",
      "KC_UNDS",
      "KC_HASH",
      "KC_TILD",
      "KC_CIRC",
      "KC_DLR",
      "KC_BSLS",
      "KC_COMM",
      "KC_DOT",
      "KC_SLSH",
      "KC_UNDS",
      "KC_NO",
      "KC_3",
      "KC_NO",
      "KC_NO",
      "LGUI(KC_SPC)",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_TRNS",
      "KC_TRNS"
    ],
    [
      "KC_NO",
      "KC_F11",
      "KC_F12",
      "ANY(LCTL(LALT(LSFT(KC_F1))))",
      "ANY(LCTL(LALT(LSFT(KC_F2))))",
      "ANY(LCTL(LALT(LSFT(KC_F3))))",
      "ANY(LCTL(LSFT(KC_Y)))",
      "ANY(M_curly_brackets)",
      "ANY(M_square_brackets)",
      "ANY(M_round_brackets)",
      "ANY(M_angle_brackets)",
      "KC_NO",
      "KC_NO",
      "KC_F1",
      "KC_F2",
      "KC_F3",
      "KC_F4",
      "KC_F5",
      "ANY(LCTL(LSFT(KC_H)))",
      "ANY(LCTL(LSFT(KC_J)))",
      "ANY(LCTL(LSFT(KC_K)))",
      "ANY(LCTL(LSFT(KC_L)))",
      "ANY(LCTL(LSFT(KC_SEMICOLON)))",
      "ANY(LCTL(LSFT(KC_QUOTE)))",
      "KC_NO",
      "KC_F6",
      "KC_F7",
      "KC_F8",
      "KC_F9",
      "KC_F10",
      "ANY(LCTL(LSFT(KC_N)))",
      "ANY(LCTL(LSFT(KC_M)))",
      "ANY(M_arrow_left)",
      "ANY(M_arrow_right)",
      "ANY(LCTL(LSFT(KC_SEMICOLON)))",
      "KC_NO",
      "KC_NO",
      "KC_4",
      "KC_LALT",
      "KC_LCTL",
      "ANY(LCTL(LALT(LSFT(KC_F7))))",
      "ANY(LCTL(LALT(LSFT(KC_F8))))",
      "KC_LSFT",
      "KC_LGUI",
      "KC_TRNS",
      "KC_TRNS"
    ]
  ],
  "author": ""
}